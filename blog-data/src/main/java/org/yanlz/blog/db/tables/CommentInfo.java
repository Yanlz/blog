/**
 * This class is generated by jOOQ
 */
package org.yanlz.blog.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.yanlz.blog.db.Blog;
import org.yanlz.blog.db.Keys;
import org.yanlz.blog.db.tables.records.CommentInfoRecord;


/**
 * 评论信息表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentInfo extends TableImpl<CommentInfoRecord> {

	private static final long serialVersionUID = -2878535;

	/**
	 * The reference instance of <code>blog.tb_comment_info</code>
	 */
	public static final CommentInfo TB_COMMENT_INFO = new CommentInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CommentInfoRecord> getRecordType() {
		return CommentInfoRecord.class;
	}

	/**
	 * The column <code>blog.tb_comment_info.comment_id</code>. 主键
	 */
	public final TableField<CommentInfoRecord, ULong> COMMENT_ID = createField("comment_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "主键");

	/**
	 * The column <code>blog.tb_comment_info.comment_blog_id</code>. 评论文章ID
	 */
	public final TableField<CommentInfoRecord, Long> COMMENT_BLOG_ID = createField("comment_blog_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "评论文章ID");

	/**
	 * The column <code>blog.tb_comment_info.comment_user_id</code>. 评论人id
	 */
	public final TableField<CommentInfoRecord, Long> COMMENT_USER_ID = createField("comment_user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "评论人id");

	/**
	 * The column <code>blog.tb_comment_info.comment_content</code>. 评论内容
	 */
	public final TableField<CommentInfoRecord, String> COMMENT_CONTENT = createField("comment_content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "评论内容");

	/**
	 * The column <code>blog.tb_comment_info.parent_id</code>. 评论父节点
	 */
	public final TableField<CommentInfoRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT, this, "评论父节点");

	/**
	 * The column <code>blog.tb_comment_info.created_time</code>. 评论时间
	 */
	public final TableField<CommentInfoRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "评论时间");

	/**
	 * The column <code>blog.tb_comment_info.updated_time</code>. 更新时间
	 */
	public final TableField<CommentInfoRecord, Timestamp> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * Create a <code>blog.tb_comment_info</code> table reference
	 */
	public CommentInfo() {
		this("tb_comment_info", null);
	}

	/**
	 * Create an aliased <code>blog.tb_comment_info</code> table reference
	 */
	public CommentInfo(String alias) {
		this(alias, TB_COMMENT_INFO);
	}

	private CommentInfo(String alias, Table<CommentInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private CommentInfo(String alias, Table<CommentInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Blog.BLOG, aliased, parameters, "评论信息表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CommentInfoRecord, ULong> getIdentity() {
		return Keys.IDENTITY_TB_COMMENT_INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CommentInfoRecord> getPrimaryKey() {
		return Keys.KEY_TB_COMMENT_INFO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CommentInfoRecord>> getKeys() {
		return Arrays.<UniqueKey<CommentInfoRecord>>asList(Keys.KEY_TB_COMMENT_INFO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentInfo as(String alias) {
		return new CommentInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CommentInfo rename(String name) {
		return new CommentInfo(name, null);
	}
}
