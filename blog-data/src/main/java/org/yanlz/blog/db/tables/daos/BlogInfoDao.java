/**
 * This class is generated by jOOQ
 */
package org.yanlz.blog.db.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;
import org.yanlz.blog.db.tables.BlogInfo;
import org.yanlz.blog.db.tables.records.BlogInfoRecord;


/**
 * 文章信息表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlogInfoDao extends DAOImpl<BlogInfoRecord, org.yanlz.blog.db.tables.pojos.BlogInfo, ULong> {

	/**
	 * Create a new BlogInfoDao without any configuration
	 */
	public BlogInfoDao() {
		super(BlogInfo.TB_BLOG_INFO, org.yanlz.blog.db.tables.pojos.BlogInfo.class);
	}

	/**
	 * Create a new BlogInfoDao with an attached configuration
	 */
	public BlogInfoDao(Configuration configuration) {
		super(BlogInfo.TB_BLOG_INFO, org.yanlz.blog.db.tables.pojos.BlogInfo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ULong getId(org.yanlz.blog.db.tables.pojos.BlogInfo object) {
		return object.getBlogId();
	}

	/**
	 * Fetch records that have <code>blog_id IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogId(ULong... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>blog_id = value</code>
	 */
	public org.yanlz.blog.db.tables.pojos.BlogInfo fetchOneByBlogId(ULong value) {
		return fetchOne(BlogInfo.TB_BLOG_INFO.BLOG_ID, value);
	}

	/**
	 * Fetch records that have <code>blog_author IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogAuthor(Long... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_AUTHOR, values);
	}

	/**
	 * Fetch records that have <code>blog_type IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogType(Byte... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_TYPE, values);
	}

	/**
	 * Fetch records that have <code>blog_title IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogTitle(String... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_TITLE, values);
	}

	/**
	 * Fetch records that have <code>blog_abstract IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogAbstract(String... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_ABSTRACT, values);
	}

	/**
	 * Fetch records that have <code>blog_content IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByBlogContent(String... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.BLOG_CONTENT, values);
	}

	/**
	 * Fetch records that have <code>created_time IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByCreatedTime(Timestamp... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.CREATED_TIME, values);
	}

	/**
	 * Fetch records that have <code>updated_time IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByUpdatedTime(Timestamp... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.UPDATED_TIME, values);
	}

	/**
	 * Fetch records that have <code>comment_count IN (values)</code>
	 */
	public List<org.yanlz.blog.db.tables.pojos.BlogInfo> fetchByCommentCount(Long... values) {
		return fetch(BlogInfo.TB_BLOG_INFO.COMMENT_COUNT, values);
	}
}
