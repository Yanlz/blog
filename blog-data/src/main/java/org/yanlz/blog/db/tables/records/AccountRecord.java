/**
 * This class is generated by jOOQ
 */
package org.yanlz.blog.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.yanlz.blog.db.tables.Account;
import org.yanlz.blog.db.tables.interfaces.IAccount;


/**
 * 用户账户表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record10<ULong, Long, String, String, String, String, Byte, Timestamp, Timestamp, Byte>, IAccount {

	private static final long serialVersionUID = -1625529323;

	/**
	 * Setter for <code>blog.tb_account.id</code>. 主键
	 */
	@Override
	public void setId(ULong value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>blog.tb_account.id</code>. 主键
	 */
	@NotNull
	@Override
	public ULong getId() {
		return (ULong) getValue(0);
	}

	/**
	 * Setter for <code>blog.tb_account.user_id</code>. 用户id
	 */
	@Override
	public void setUserId(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>blog.tb_account.user_id</code>. 用户id
	 */
	@NotNull
	@Override
	public Long getUserId() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>blog.tb_account.account_name</code>. 登录帐号
	 */
	@Override
	public void setAccountName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>blog.tb_account.account_name</code>. 登录帐号
	 */
	@NotNull
	@Size(max = 30)
	@Override
	public String getAccountName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>blog.tb_account.telephone</code>. 电话
	 */
	@Override
	public void setTelephone(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>blog.tb_account.telephone</code>. 电话
	 */
	@NotNull
	@Size(max = 15)
	@Override
	public String getTelephone() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>blog.tb_account.email</code>. 点子邮箱
	 */
	@Override
	public void setEmail(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>blog.tb_account.email</code>. 点子邮箱
	 */
	@NotNull
	@Size(max = 20)
	@Override
	public String getEmail() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>blog.tb_account.password</code>. 密码
	 */
	@Override
	public void setPassword(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>blog.tb_account.password</code>. 密码
	 */
	@NotNull
	@Size(max = 20)
	@Override
	public String getPassword() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>blog.tb_account.type</code>. 账户类型，0:普通用户，1:管理员
	 */
	@Override
	public void setType(Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>blog.tb_account.type</code>. 账户类型，0:普通用户，1:管理员
	 */
	@NotNull
	@Override
	public Byte getType() {
		return (Byte) getValue(6);
	}

	/**
	 * Setter for <code>blog.tb_account.created_time</code>.
	 */
	@Override
	public void setCreatedTime(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>blog.tb_account.created_time</code>.
	 */
	@NotNull
	@Override
	public Timestamp getCreatedTime() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>blog.tb_account.updated_time</code>.
	 */
	@Override
	public void setUpdatedTime(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>blog.tb_account.updated_time</code>.
	 */
	@NotNull
	@Override
	public Timestamp getUpdatedTime() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>blog.tb_account.status</code>. 账户状态，枚举类型，0:无效，1:有效，默认为1
	 */
	@Override
	public void setStatus(Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>blog.tb_account.status</code>. 账户状态，枚举类型，0:无效，1:有效，默认为1
	 */
	@NotNull
	@Override
	public Byte getStatus() {
		return (Byte) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<ULong> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<ULong, Long, String, String, String, String, Byte, Timestamp, Timestamp, Byte> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<ULong, Long, String, String, String, String, Byte, Timestamp, Timestamp, Byte> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field1() {
		return Account.TB_ACCOUNT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Account.TB_ACCOUNT.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Account.TB_ACCOUNT.ACCOUNT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Account.TB_ACCOUNT.TELEPHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Account.TB_ACCOUNT.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Account.TB_ACCOUNT.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return Account.TB_ACCOUNT.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return Account.TB_ACCOUNT.CREATED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return Account.TB_ACCOUNT.UPDATED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field10() {
		return Account.TB_ACCOUNT.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAccountName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTelephone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getCreatedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getUpdatedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value10() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value1(ULong value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value2(Long value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value3(String value) {
		setAccountName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value4(String value) {
		setTelephone(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value5(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value6(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value7(Byte value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value8(Timestamp value) {
		setCreatedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value9(Timestamp value) {
		setUpdatedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord value10(Byte value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountRecord values(ULong value1, Long value2, String value3, String value4, String value5, String value6, Byte value7, Timestamp value8, Timestamp value9, Byte value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAccount from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setAccountName(from.getAccountName());
		setTelephone(from.getTelephone());
		setEmail(from.getEmail());
		setPassword(from.getPassword());
		setType(from.getType());
		setCreatedTime(from.getCreatedTime());
		setUpdatedTime(from.getUpdatedTime());
		setStatus(from.getStatus());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAccount> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccountRecord
	 */
	public AccountRecord() {
		super(Account.TB_ACCOUNT);
	}

	/**
	 * Create a detached, initialised AccountRecord
	 */
	public AccountRecord(ULong id, Long userId, String accountName, String telephone, String email, String password, Byte type, Timestamp createdTime, Timestamp updatedTime, Byte status) {
		super(Account.TB_ACCOUNT);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, accountName);
		setValue(3, telephone);
		setValue(4, email);
		setValue(5, password);
		setValue(6, type);
		setValue(7, createdTime);
		setValue(8, updatedTime);
		setValue(9, status);
	}
}
